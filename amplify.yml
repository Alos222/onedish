version: 1
backend:
  phases:
    preBuild:
      commands:
        - echo 'Setting up environment variables...'

        # Get all the environment variables that are set in AWS Parameter Store and set them to variables
        - NEXTAUTH_SECRET=$(echo "$secrets" | grep -o '"ONE_DISH_NEXTAUTH_SECRET":"[^"]*' | sed 's/"ONE_DISH_NEXTAUTH_SECRET":"//')

        - GOOGLE_OAUTH_CLIENT_SECRET=$(echo "$secrets" | grep -o '"ONE_DISH_GOOGLE_OAUTH_CLIENT_SECRET":"[^"]*' | sed 's/"ONE_DISH_GOOGLE_OAUTH_CLIENT_SECRET":"//')

        - AWS_SECRET_ACCESS_KEY=$(echo "$secrets" | grep -o '"ONE_DISH_AWS_SECRET_ACCESS_KEY":"[^"]*' | sed 's/"ONE_DISH_AWS_SECRET_ACCESS_KEY":"//')
        - AWS_ACCESS_KEY_ID=$(echo "$secrets" | grep -o '"ONE_DISH_AWS_ACCESS_KEY_ID":"[^"]*' | sed 's/"ONE_DISH_AWS_ACCESS_KEY_ID":"//')

        - DATABASE_URL=$(echo "$secrets" | grep -o '"ONE_DISH_MONGODB_DATABASE_URL":"[^"]*' | sed 's/"ONE_DISH_MONGODB_DATABASE_URL":"//')

        # Use the variables created above to save them to the production environment file
        - echo NEXTAUTH_SECRET=$NEXTAUTH_SECRET >> .env.production

        - echo GOOGLE_OAUTH_CLIENT_SECRET=$GOOGLE_OAUTH_CLIENT_SECRET >> .env.production
        - echo GOOGLE_OAUTH_CLIENT_ID=$GOOGLE_OAUTH_CLIENT_ID >> .env.production

        - echo DATABASE_URL=$DATABASE_URL >> .env.production

        - echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env.production
        - echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env.production

        # Now save environment variables that are stored in the AWS Amplify app settings
        - env | grep -e S3_BUCKET_NAME >> .env.production
        - env | grep -e S3_REGION >> .env.production

        - env | grep -e BASE_APP_URL >> .env.production
        - env | grep -e NEXTAUTH_URL >> .env.production
        # Gets all env vars that start with NEXT_PUBLIC_
        - env | grep -e NEXT_PUBLIC_ >> .env.production

        - cat .env.production

        # We use pnpm for this project, so need to install it here
        - npm install -g pnpm
        - pnpm install
    build:
      commands:
        - pnpm prisma generate
        - pnpm build
  cache:
    paths:
      - node_modules/**/*
frontend:
  phases:
    build:
      commands:
        - echo "Built with the backend phase, so skipping frontend"
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
